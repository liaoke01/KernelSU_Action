name: Build ko

on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:   
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3

        git clone --depth 1 https://github.com/LineageOS/android_prebuilts_clang_kernel_linux-x86_clang-r416183b.git clang
        mkdir gcc-64
        wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
        mkdir gcc-32
        wget -O gcc-arm.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc-32/ -zxvf gcc-arm.tar.gz
        mkdir misc
        wget -O misc.tar.gz https://android.googlesource.com/platform/prebuilts/misc/+archive/refs/heads/android-msm-crosshatch-4.9-android12/linux-x86.tar.gz
        tar -C misc/ -zxvf misc.tar.gz
             
    - name: Build kernel
      run: |
        git clone --depth 1 https://github.com/liaoke01/android_kernel_xiaomi_sm8450
        cd $GITHUB_WORKSPACE
        cd android_kernel_xiaomi_sm8450
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/gcc-64/bin:$PATH
        export PATH=$GITHUB_WORKSPACE/gcc-32/bin:$PATH
        export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
        export PATH=$GITHUB_WORKSPACE/misc/lz4:$PATH
        export PATH=$GITHUB_WORKSPACE/misc/dtc:$PATH
        export PATH=$GITHUB_WORKSPACE/misc/libufdt:$PATH
        export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/clang/lib64:$LD_LIBRARY_PATH
        git config --global user.email "bot@example.com"
        git config --global user.name "bot"

        sed -i s/'CONFIG_LTO_CLANG=y'/'CONFIG_LTO_CLANG=n'/g $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        echo CONFIG_LTO_NONE=y >> $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        echo CONFIG_LTO=n >> $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        sed -i s/'=m'/'=y'/g $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
        echo CONFIG_MODULES=y >> $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        echo CONFIG_KSU=m >> $GITHUB_WORKSPACE/android_kernel_xiaomi_sm8450/arch/arm64/configs/gki_defconfig
        make O=out ARCH=arm64 CC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf OBJSIZE=llvm-size STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++ HOSTLD=ld.lld CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- gki_defconfig
        make O=out ARCH=arm64 CC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf OBJSIZE=llvm-size STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++ HOSTLD=ld.lld CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi-
    
    - name: Pack Boot
      run: |
        cd $GITHUB_WORKSPACE
        cd android_kernel_xiaomi_sm8450
        mkdir packboot
        wget https://raw.githubusercontent.com/jiamils/KernelSU_Action/main/magiskboot
        chmod a+x magiskboot
        cd packboot
        wget https://mirrorbits.lineageos.org/full/crosshatch/20240423/boot.img
        ../magiskboot unpack boot.img
        cp ../out/arch/arm64/boot/Image.lz4 kernel
        ../magiskboot repack boot.img
        
    - name: Upload the boot
      uses: actions/upload-artifact@v4
      with:
        name: new-boot.img
        path: android_kernel_xiaomi_sm8450/packboot/new-boot.img
          
